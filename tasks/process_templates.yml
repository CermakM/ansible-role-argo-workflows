---
# tasks file for template processing
- set_fact: argo_url="https://raw.githubusercontent.com/argoproj/argo/master/manifests/namespace-install.yaml"

# root directory for k8s files
- set_fact: k8s_root="{{ role_path }}/files"

# kubernetes deployment templates and overlays
- set_fact:
    k8s_base:  "{{ k8s_root }}/base"
    k8s_patch: "{{ k8s_root }}/patch"
    k8s_overlays: "{{ k8s_root }}/overlays"

- name: "make sure directories for kubernetes templates exist"
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "{{ k8s_root }}"
    - "{{ k8s_base }}"
    - "{{ k8s_patch }}"
    - "{{ k8s_overlays }}"
    - "{{ k8s_overlays }}/{{ overlay }}"

- name: "get argo"
  get_url:
    url:  "{{ argo_url }}"
    dest: "{{ k8s_base }}"

- name: "process artifact repository secrets template"
  template:
    src: ../templates/secrets.yaml
    dest: "{{ k8s_base }}"
  when: ARTIFACT_REPOSITORY == "s3"

- name: "find all base templates"
  find:
    paths: ../templates/base
    file_type: file
    patterns:
      - '*.yaml'
      - '*.yml'
    excludes:
      - 'kustomization*'
    recurse: yes
  register: base_templates

- name: "process base templates"
  template:
    src:  "{{ item.path }}"
    dest: "{{ k8s_base }}"
  with_items: "{{ base_templates.files }}"

- name: "find all patch templates"
  find:
    paths: ../templates/patch
    file_type: file
    patterns:
      - '*.yaml'
      - '*.yml'
    excludes:
      - 'kustomization*'
    recurse: yes
  register: patch_templates

- name: "process patch templates"
  template:
    src:  "{{ item.path }}"
    dest: "{{ k8s_patch }}"
  with_items: "{{ patch_templates.files }}"

- name: "find all overlay templates"
  find:
    paths: "../templates/overlays/{{ overlay }}"
    file_type: file
    patterns:
      - '*.yaml'
      - '*.yml'
    excludes:
      - 'kustomization*'
    recurse: yes
  register: overlay_templates
  when: overlay != ""

- name: "process overlay templates"
  template:
    src:  "{{ item.path }}"
    dest: "{{ k8s_overlays }}/{{ overlay }}"
  with_items: "{{ overlay_templates.files }}"
  when: overlay != ""

- name: "find all patches"
  find:
    paths: "{{ k8s_patch }}"
    file_type: file
    patterns:
      - '*.yaml'
      - '*.yml'
    recurse: yes
  register: patches

- name: "find all resources"
  find:
    paths: "{{ k8s_base }}"
    file_type: file
    patterns:
      - '*.yaml'
      - '*.yml'
    recurse: yes
  register: resources

- name: "find all overlays"
  find:
    paths: "{{ k8s_overlays }}"
    file_type: file
    patterns:
      - '*.yaml'
      - '*.yml'
    recurse: yes
  register: overlays


- name: "find all kustomization templates"
  find:
    paths: ../templates
    file_type: file
    patterns:
      - 'kustomization.yaml'
      - 'kustomization.yml'
      - 'kustomization'
    recurse: yes
  register: kustomization_templates

- name: "process kustomization templates"
  template:
    src:  "{{ item.path }}"
    dest: "{{ k8s_root }}/{{ item.path | relpath( '../templates' ) }}"
  with_items: "{{ kustomization_templates.files }}"
