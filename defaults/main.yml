---
# defaults file for argo-workflows

# Namespace into which Argo should be provisioned
namespace: argo

# This assumes certain privileges and modifies the resources accordingly
# For example, it is assumed that a developer will not be able to create
# a CRD. These resources are therefore expected to already exist in the cluster.
as: cluster-admin  # options: developer, cluster-admin

# Custom overlay to be applied via kustomize to the base argo installation.
# Overlays must be present in the [/templates/overlays/](/templates/overlays/) folder and must contain a valid `kustomization.yaml`
overlay: ""        # options: openshift

# Argo container runtime executor
#
#     Docker

# + supports all workflow examples
# + most reliable and well tested
# + very scalable. communicates to docker daemon for heavy lifting
# - least secure. requires docker.sock of host to be mounted (often rejected by OPA)
# 
#     Kubelet
# 
# + secure. cannot escape privileges of pod's service account
# + medium scalability - log retrieval and container polling is done against kubelet
# - additional kubelet configuration may be required
# - can only save params/artifacts in volumes (e.g. emptyDir), and not the base image layer (e.g. /tmp)
# 
#     K8s API
# 
# + secure. cannot escape privileges of pod's service account
# + no extra configuration
# - least scalable - log retrieval and container polling is done against k8s API server
# - can only save params/artifacts in volumes (e.g. emptyDir), and not the base image layer (e.g. /tmp)
# 
#     PNS
# 
# + secure. cannot escape privileges of service account
# + artifact collection can be collected from base image layer
# + scalable - process polling is done over procfs and not kubelet/k8s API
# - processes will no longer run with pid 1
# - artifact collection from base image may fail for containers which complete too fast
# - cannot capture artifact directories from base image layer which has a volume mounted under it
# - immature
executor: docker   # options: docker, kubelet, k8sapi, pns

# Kind of artifact repository to be configured (if not empty)
artifactRepository: ""

# archiveLogs will archive the main container logs as an artifact
# only applicable if artifactRepository != ""
archiveLogs: true

# s3 artifact repository configuration
AWS_S3_BUCKET_PREFIX: ""
AWS_S3_ARTIFACT_PATH: ""
